#ifndef _UniversalVert_h_
#define _UniversalVert_h_


// Header generated from binary by WriteAsBinHeader()..
static const int UniversalVertLength = 2829;
static const unsigned int UniversalVert[UniversalVertLength]={
	0x20205356,	0xFFFF0008,	0x00000048,	0x01020000,	0x000000B4,	0x00000091,	0x00000000,	0x00000000,	0x00000006,	0x00000006,
	0x00000076,	0x00000000,	0x00000000,	0x00000000,	0x00000002,	0x00000000,	0x00000D3B,	0x00000078,	0x00000000,	0x01200002,
	0x03402400,	0x00000000,	0x00000000,	0x01040000,	0x010880FF,	0x00000000,	0x02000000,	0x2225A441,	0x023825A4,	0x00000000,
	0x05000000,	0x0105A401,	0x040823A4,	0x00000000,	0x00000000,	0x01030000,	0x08882300,	0x00000000,	0x05000000,	0x0103A401,
	0x03382300,	0x00000000,	0x05000000,	0x0105A401,	0x044025A4,	0x00000000,	0x00000000,	0x01050000,	0x08C023FF,	0x00000000,
	0x00000000,	0x01030000,	0x084023FF,	0x00000000,	0x0E000000,	0x0183A402,	0x023825A4,	0x00000000,	0x05000000,	0x0105A401,
	0x040826A4,	0x00000000,	0x00000000,	0x01060000,	0x08882600,	0x00000000,	0x05000000,	0x0106A401,	0x03382600,	0x00000000,
	0x03000000,	0x0100A401,	0x044026F9,	0x00000000,	0x00000000,	0x01060000,	0x00A024FF,	0x00000000,	0x06000000,	0x0100A401,
	0x044026F9,	0x00000000,	0x00000000,	0x01060000,	0x008824FF,	0x00000000,	0x00000000,	0x021C0000,	0x00902400,	0x00000000,
	0x00000000,	0x00000000,	0x1C005400,	0x00000000,	0x00000000,	0x01200002,	0x03082500,	0x00000000,	0x00000000,	0x01050000,
	0x01108000,	0x00000000,	0x07000000,	0x6123A40A,	0x040824A4,	0x00000000,	0x00000000,	0x01200002,	0x03082500,	0x00000000,
	0x00000000,	0x01050000,	0x01088000,	0x00000000,	0x00000000,	0x22290000,	0x00882500,	0x00000000,	0x0F000000,	0x01850002,
	0x0C886100,	0x00000000,	0x00000000,	0x06010000,	0x18800200,	0x00000000,	0x00000000,	0x028B0000,	0x00882500,	0x00000000,
	0x00000000,	0x00000000,	0x18000E00,	0x00000000,	0x00000000,	0x01200002,	0x03082500,	0x00000000,	0x00000000,	0x01050000,
	0x01088000,	0x00000000,	0x04000000,	0x222A0001,	0x0D086100,	0x00000000,	0x00000000,	0x06010000,	0x18800200,	0x00000000,
	0x00000000,	0x028A0000,	0x00882500,	0x00000000,	0x00000000,	0x00000000,	0x18000800,	0x00000000,	0x00000000,	0x01040000,
	0x07082400,	0x00000000,	0x00000000,	0x01200002,	0x03402500,	0x00000000,	0x00000000,	0x01050000,	0x011080FF,	0x00000000,
	0x08000000,	0x2124000A,	0x03082400,	0x00000000,	0x00000000,	0x02900000,	0x07402500,	0x00000000,	0x05000000,	0x0104FF01,
	0x03402500,	0x00000000,	0x00000000,	0x01050000,	0x064025FF,	0x00000000,	0x00000000,	0x01050000,	0x008825FF,	0x00000000,
	0x00000000,	0x01200002,	0x03402500,	0x00000000,	0x00000000,	0x01200002,	0x03082600,	0x00000000,	0x00000000,	0x01060000,
	0x01108000,	0x00000000,	0x0C000000,	0x2123000A,	0x030826FF,	0x00000000,	0x00000000,	0x01050000,	0x010880FF,	0x00000000,
	0x06000000,	0x222B0001,	0x02082600,	0x00000000,	0x03000000,	0x0103FF01,	0x034025FF,	0x00000000,	0x00000000,	0x01200002,
	0x03102600,	0x00000000,	0x00000000,	0x01060000,	0x21108055,	0x00000000,	0x0D000106,	0x2125000A,	0x0E8826FF,	0x00000000,
	0x00000000,	0x01060000,	0x08082600,	0x00000000,	0x05000000,	0x01060001,	0x03082500,	0x00000000,	0x00000000,	0x01200002,
	0x03082600,	0x00000000,	0x00000000,	0x01060000,	0x01088000,	0x00000000,	0x00000000,	0x22220000,	0x00F827E4,	0x00000000,
	0x19000000,	0x0107E402,	0x037827E4,	0x00000000,	0x00000000,	0x01200002,	0x03082600,	0x00000000,	0x00000000,	0x01060000,
	0x01088000,	0x00000000,	0x00000000,	0x22230000,	0x00F828E4,	0x00000000,	0x1A000000,	0x0108E402,	0x237828E4,	0x00000000,
	0x05E40107,	0x01085501,	0x0EF827E4,	0x00000000,	0x00000000,	0x01200002,	0x03082600,	0x00000000,	0x00000000,	0x01060000,
	0x01088000,	0x00000000,	0x00000000,	0x22240000,	0x00F828E4,	0x00000000,	0x1B000000,	0x0108E402,	0x237828E4,	0x00000000,
	0x05E40107,	0x0108AA01,	0x0EF827E4,	0x00000000,	0x07000000,	0x0105E401,	0x03782400,	0x00000000,	0x00000000,	0x00000000,
	0x1E000000,	0x00000000,	0x00000000,	0x01200002,	0x03402400,	0x00000000,	0x00000000,	0x01040000,	0x010880FF,	0x00000000,
	0x00000000,	0x01040000,	0x011080FF,	0x00000000,	0x00000000,	0x22250000,	0x00B825A4,	0x00000000,	0x05000000,	0x2125A40A,
	0x040825A4,	0x00000000,	0x00000000,	0x01050000,	0x08882500,	0x00000000,	0x00000000,	0x01040000,	0x011080FF,	0x00000000,
	0x05000000,	0x2125A40A,	0x03382500,	0x00000000,	0x05000000,	0x0105A401,	0x040826A4,	0x00000000,	0x00000000,	0x01060000,
	0x08882600,	0x00000000,	0x05000000,	0x0106A401,	0x03382600,	0x00000000,	0x05000000,	0x0100A401,	0x044026F9,	0x00000000,
	0x00000000,	0x01060000,	0x00A024FF,	0x00000000,	0x06000000,	0x0100A401,	0x044026F9,	0x00000000,	0x00000000,	0x01060000,
	0x008824FF,	0x00000000,	0x00000000,	0x021C0000,	0x00902400,	0x00000000,	0x00000000,	0x00000000,	0x1C000F00,	0x00000000,
	0x00000000,	0x01200002,	0x03082500,	0x00000000,	0x00000000,	0x01050000,	0x01088000,	0x00000000,	0x00000000,	0x22220000,
	0x00F826E4,	0x00000000,	0x19000000,	0x0106E402,	0x037826E4,	0x00000000,	0x00000000,	0x01200002,	0x03082500,	0x00000000,
	0x00000000,	0x01050000,	0x01088000,	0x00000000,	0x00000000,	0x22230000,	0x00F827E4,	0x00000000,	0x1A000000,	0x0107E402,
	0x237827E4,	0x00000000,	0x05E40106,	0x01075501,	0x0EF826E4,	0x00000000,	0x00000000,	0x01200002,	0x03082500,	0x00000000,
	0x00000000,	0x01050000,	0x01088000,	0x00000000,	0x00000000,	0x22240000,	0x00F827E4,	0x00000000,	0x1B000000,	0x0107E402,
	0x237827E4,	0x00000000,	0x05E40106,	0x0107AA01,	0x0EF824E4,	0x00000000,	0x00000000,	0x00000000,	0x1E000000,	0x00000000,
	0x04000000,	0x028AAA01,	0x0D086100,	0x00000000,	0x00000000,	0x06010000,	0x18800200,	0x00000000,	0x00000000,	0x028A0000,
	0x00902500,	0x00000000,	0x00000000,	0x00000000,	0x18000100,	0x00000000,	0x00000000,	0x01040000,	0x009025AA,	0x00000000,
	0x04000000,	0x028AAA01,	0x0B202400,	0x00000000,	0x0A000000,	0x01840002,	0x0BC02400,	0x00000000,	0x04000000,	0x0104FF01,
	0x024224AA,	0x00000000,	0x04000000,	0x0201FF01,	0x0C086100,	0x00000000,	0x00000000,	0x06010000,	0x18800200,	0x00000000,
	0x00000000,	0x028A0000,	0x00A02500,	0x00000000,	0x00000000,	0x00000000,	0x18000400,	0x00000000,	0x00000000,	0x01040000,
	0x07082400,	0x00000000,	0x04000000,	0x01040001,	0x03082455,	0x00000000,	0x00000000,	0x01040000,	0x06082400,	0x00000000,
	0x00000000,	0x01040000,	0x00A02500,	0x00000000,	0x00000000,	0x00000000,	0x1E000000,	0x00000000,	0x00000000,	0x02020000,
	0x237821E4,	0x00000000,	0x00E40101,	0x02035500,	0x2EF821E4,	0x00000000,	0x00E40101,	0x0204AA00,	0x2EF821E4,	0x00000000,
	0x00E40101,	0x0205FF00,	0x0EF800E4,	0x00000000,	0x00000000,	0x02060000,	0x237822E4,	0x00000000,	0x00E40102,	0x02075500,
	0x2EF822E4,	0x00000000,	0x00E40102,	0x0208AA00,	0x2EF822E4,	0x00000000,	0x00E40102,	0x0209FF00,	0x0EF822E4,	0x00000000,
	0x01000000,	0x020A0000,	0x233821A4,	0x00000000,	0x01A40101,	0x020B5500,	0x2EB821A4,	0x00000000,	0x01A40101,	0x020CAA00,
	0x0EB821A4,	0x00000000,	0x01000000,	0x0101A401,	0x041020A4,	0x00000000,	0x00000000,	0x01000000,	0x08902055,	0x00000000,
	0x01000000,	0x01009001,	0x03702054,	0x00000000,	0x00000000,	0x00020000,	0x00F801E4,	0x00000000,	0x00000000,	0x02010000,
	0x00C02100,	0x00000000,	0x0D000000,	0x01010002,	0x0C0861FF,	0x00000000,	0x00000000,	0x06010000,	0x18800400,	0x00000000,
	0x03000000,	0x02100000,	0x237821E4,	0x00000000,	0x03E40101,	0x02115500,	0x2EF821E4,	0x00000000,	0x03E40101,	0x0212AA00,
	0x2EF821E4,	0x00000000,	0x03E40101,	0x0213FF00,	0x0EF802E4,	0x00000000,	0x00000000,	0x02010000,	0x00882000,	0x00000000,
	0x0E000000,	0x01000002,	0x0C086100,	0x00000000,	0x00000000,	0x06010000,	0x18800400,	0x00000000,	0x04000000,	0x02140000,
	0x237821E4,	0x00000000,	0x04E40101,	0x02155500,	0x2EF821E4,	0x00000000,	0x04E40101,	0x0216AA00,	0x2EF821E4,	0x00000000,
	0x04E40101,	0x0217FF00,	0x0EF803E4,	0x00000000,	0x00000000,	0x02010000,	0x00882000,	0x00000000,	0x1D000000,	0x01000002,
	0x0C086100,	0x00000000,	0x00000000,	0x02010000,	0x00882000,	0x00000000,	0x1E000000,	0x01000002,	0x0C086100,	0x00000000,
	0x00000000,	0x06010000,	0x18801300,	0x00000000,	0x00000000,	0x021F0000,	0x00F821E4,	0x00000000,	0x00000000,	0x02000000,
	0x00882000,	0x00000000,	0x01000000,	0x01200002,	0x0B882400,	0x00000000,	0x01000000,	0x01040002,	0x0C086100,	0x00000000,
	0x00000000,	0x06010000,	0x18800C00,	0x00000000,	0x00000000,	0x01200002,	0x03082400,	0x00000000,	0x00000000,	0x01040000,
	0x01108000,	0x00000000,	0x00000000,	0x02010000,	0x00882400,	0x00000000,	0x0E000000,	0x2124000A,	0x0C086100,	0x00000000,
	0x00000000,	0x06010000,	0x18800300,	0x00000000,	0x00000000,	0x00000000,	0x1C01A200,	0x00000000,	0x04000000,	0x0101E401,
	0x027821E4,	0x00000000,	0x00000000,	0x00000000,	0x18000200,	0x00000000,	0x00000000,	0x00000000,	0x1C015800,	0x00000000,
	0x04000000,	0x0101E401,	0x027821E4,	0x00000000,	0x01000000,	0x01000002,	0x02082000,	0x00000000,	0x00000000,	0x00000000,
	0x1801F100,	0x00000000,	0x00000000,	0x01010000,	0x00FA21E4,	0x00000000,	0x00000000,	0x01010000,	0x00F801E4,	0x00000000,
	0x00000000,	0x02010000,	0x00882000,	0x00000000,	0x0C000000,	0x01800002,	0x0C086100,	0x00000000,	0x00000000,	0x02010000,
	0x00882000,	0x00000000,	0x0D000000,	0x01800002,	0x0C086100,	0x00000000,	0x00000000,	0x00050000,	0x00880900,	0x00000000,
	0x00000000,	0x81020000,	0x008804AA,	0x00000000,	0x00000000,	0x00000000,	0x1E000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x3F800000,	0x3F800000,	0x3F800000,	0x3F800000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x3F800000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x41500000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x3F800000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x3F800000,	0x00000000,
	0x43340000,	0x00000000,	0x00000000,	0x00000000,	0x40000000,	0x00000000,	0x00000000,	0x00000000,	0x0000005E,	0x00000006,
	0x00000009,	0x00000000,	0x00000000,	0x00000065,	0x00000005,	0x00000009,	0x00000000,	0x00000008,	0x0000006B,	0x00000006,
	0x00000006,	0x00000000,	0x00000004,	0x00000072,	0x0000000E,	0x00000009,	0x00000000,	0x0000000C,	0x00000081,	0x0000000E,
	0x00000009,	0x00000000,	0x00000010,	0x00000090,	0x00000009,	0x00000000,	0x00000000,	0x00000014,	0x00000000,	0x0000000B,
	0x00000009,	0x00010004,	0x00000000,	0x0000000C,	0x0000000C,	0x00000000,	0x00010004,	0x00000024,	0x0000009A,	0x0000000A,
	0x00000009,	0x00010004,	0x00000004,	0x000000A5,	0x0000000C,	0x00000000,	0x00010004,	0x00000010,	0x00000D27,	0x00000009,
	0x00000009,	0x00010004,	0x00000008,	0x00000D31,	0x00000009,	0x00000009,	0x00010004,	0x0000000C,	0x00000019,	0x00000019,
	0x0000000E,	0x00020001,	0x00000008,	0x00000033,	0x0000000F,	0x0000000E,	0x00020001,	0x00000018,	0x00000043,	0x0000000C,
	0x0000000D,	0x00020001,	0x00000028,	0x000000B2,	0x0000000C,	0x00000002,	0x00020001,	0x00000230,	0x000000BF,	0x0000000A,
	0x00000002,	0x00020001,	0x00000234,	0x000000CA,	0x0000001B,	0x00000009,	0x00020001,	0x00000060,	0x000000E6,	0x0000001A,
	0x00000009,	0x00020001,	0x00000064,	0x00000101,	0x0000001A,	0x00000009,	0x00020001,	0x00000068,	0x0000011C,	0x0000001B,
	0x00000009,	0x00020001,	0x0000006C,	0x00000138,	0x0000001C,	0x00000000,	0x00020001,	0x00000070,	0x00000155,	0x00000014,
	0x00000002,	0x00020001,	0x00000074,	0x0000016A,	0x00000016,	0x00000009,	0x00020001,	0x00000088,	0x00000181,	0x00000016,
	0x00000009,	0x00020001,	0x0000008C,	0x00000198,	0x00000017,	0x00000009,	0x00020001,	0x00000090,	0x000001B0,	0x00000017,
	0x00000009,	0x00020001,	0x00000094,	0x000001C8,	0x00000019,	0x00000009,	0x00020001,	0x00000098,	0x000001E2,	0x0000001C,
	0x00000006,	0x00020001,	0x0000009C,	0x000001FF,	0x0000001B,	0x00000000,	0x00020001,	0x000000A0,	0x0000021B,	0x00000019,
	0x00000000,	0x00020001,	0x000000A4,	0x00000235,	0x0000001C,	0x00000000,	0x00020001,	0x000000A8,	0x00000252,	0x00000022,
	0x00000000,	0x00020001,	0x000000AC,	0x00000275,	0x00000020,	0x00000000,	0x00020001,	0x000000B0,	0x00000296,	0x00000023,
	0x00000000,	0x00020001,	0x000000B4,	0x000002BA,	0x0000001C,	0x00000002,	0x00020001,	0x000000B8,	0x000002D7,	0x00000016,
	0x00000009,	0x00020001,	0x000000BC,	0x000002EE,	0x00000016,	0x00000009,	0x00020001,	0x000000C0,	0x00000305,	0x00000017,
	0x00000009,	0x00020001,	0x000000C4,	0x0000031D,	0x00000017,	0x00000009,	0x00020001,	0x000000C8,	0x00000335,	0x00000019,
	0x00000009,	0x00020001,	0x000000CC,	0x0000034F,	0x0000001C,	0x00000006,	0x00020001,	0x000000D0,	0x0000036C,	0x0000001B,
	0x00000000,	0x00020001,	0x000000D4,	0x00000388,	0x00000019,	0x00000000,	0x00020001,	0x000000D8,	0x000003A2,	0x0000001C,
	0x00000000,	0x00020001,	0x000000DC,	0x000003BF,	0x00000022,	0x00000000,	0x00020001,	0x000000E0,	0x000003E2,	0x00000020,
	0x00000000,	0x00020001,	0x000000E4,	0x00000403,	0x00000023,	0x00000000,	0x00020001,	0x000000E8,	0x00000427,	0x0000001C,
	0x00000002,	0x00020001,	0x000000EC,	0x00000444,	0x00000016,	0x00000009,	0x00020001,	0x000000F0,	0x0000045B,	0x00000016,
	0x00000009,	0x00020001,	0x000000F4,	0x00000472,	0x00000017,	0x00000009,	0x00020001,	0x000000F8,	0x0000048A,	0x00000017,
	0x00000009,	0x00020001,	0x000000FC,	0x000004A2,	0x00000019,	0x00000009,	0x00020001,	0x00000100,	0x000004BC,	0x0000001C,
	0x00000006,	0x00020001,	0x00000104,	0x000004D9,	0x0000001B,	0x00000000,	0x00020001,	0x00000108,	0x000004F5,	0x00000019,
	0x00000000,	0x00020001,	0x0000010C,	0x0000050F,	0x0000001C,	0x00000000,	0x00020001,	0x00000110,	0x0000052C,	0x00000022,
	0x00000000,	0x00020001,	0x00000114,	0x0000054F,	0x00000020,	0x00000000,	0x00020001,	0x00000118,	0x00000570,	0x00000023,
	0x00000000,	0x00020001,	0x0000011C,	0x00000594,	0x0000001C,	0x00000002,	0x00020001,	0x00000120,	0x000005B1,	0x00000016,
	0x00000009,	0x00020001,	0x00000124,	0x000005C8,	0x00000016,	0x00000009,	0x00020001,	0x00000128,	0x000005DF,	0x00000017,
	0x00000009,	0x00020001,	0x0000012C,	0x000005F7,	0x00000017,	0x00000009,	0x00020001,	0x00000130,	0x0000060F,	0x00000019,
	0x00000009,	0x00020001,	0x00000134,	0x00000629,	0x0000001C,	0x00000006,	0x00020001,	0x00000138,	0x00000646,	0x0000001B,
	0x00000000,	0x00020001,	0x0000013C,	0x00000662,	0x00000019,	0x00000000,	0x00020001,	0x00000140,	0x0000067C,	0x0000001C,
	0x00000000,	0x00020001,	0x00000144,	0x00000699,	0x00000022,	0x00000000,	0x00020001,	0x00000148,	0x000006BC,	0x00000020,
	0x00000000,	0x00020001,	0x0000014C,	0x000006DD,	0x00000023,	0x00000000,	0x00020001,	0x00000150,	0x00000701,	0x0000001C,
	0x00000002,	0x00020001,	0x00000154,	0x0000071E,	0x00000016,	0x00000009,	0x00020001,	0x00000158,	0x00000735,	0x00000016,
	0x00000009,	0x00020001,	0x0000015C,	0x0000074C,	0x00000017,	0x00000009,	0x00020001,	0x00000160,	0x00000764,	0x00000017,
	0x00000009,	0x00020001,	0x00000164,	0x0000077C,	0x00000019,	0x00000009,	0x00020001,	0x00000168,	0x00000796,	0x0000001C,
	0x00000006,	0x00020001,	0x0000016C,	0x000007B3,	0x0000001B,	0x00000000,	0x00020001,	0x00000170,	0x000007CF,	0x00000019,
	0x00000000,	0x00020001,	0x00000174,	0x000007E9,	0x0000001C,	0x00000000,	0x00020001,	0x00000178,	0x00000806,	0x00000022,
	0x00000000,	0x00020001,	0x0000017C,	0x00000829,	0x00000020,	0x00000000,	0x00020001,	0x00000180,	0x0000084A,	0x00000023,
	0x00000000,	0x00020001,	0x00000184,	0x0000086E,	0x0000001C,	0x00000002,	0x00020001,	0x00000188,	0x0000088B,	0x00000016,
	0x00000009,	0x00020001,	0x0000018C,	0x000008A2,	0x00000016,	0x00000009,	0x00020001,	0x00000190,	0x000008B9,	0x00000017,
	0x00000009,	0x00020001,	0x00000194,	0x000008D1,	0x00000017,	0x00000009,	0x00020001,	0x00000198,	0x000008E9,	0x00000019,
	0x00000009,	0x00020001,	0x0000019C,	0x00000903,	0x0000001C,	0x00000006,	0x00020001,	0x000001A0,	0x00000920,	0x0000001B,
	0x00000000,	0x00020001,	0x000001A4,	0x0000093C,	0x00000019,	0x00000000,	0x00020001,	0x000001A8,	0x00000956,	0x0000001C,
	0x00000000,	0x00020001,	0x000001AC,	0x00000973,	0x00000022,	0x00000000,	0x00020001,	0x000001B0,	0x00000996,	0x00000020,
	0x00000000,	0x00020001,	0x000001B4,	0x000009B7,	0x00000023,	0x00000000,	0x00020001,	0x000001B8,	0x000009DB,	0x0000001C,
	0x00000002,	0x00020001,	0x000001BC,	0x000009F8,	0x00000016,	0x00000009,	0x00020001,	0x000001C0,	0x00000A0F,	0x00000016,
	0x00000009,	0x00020001,	0x000001C4,	0x00000A26,	0x00000017,	0x00000009,	0x00020001,	0x000001C8,	0x00000A3E,	0x00000017,
	0x00000009,	0x00020001,	0x000001CC,	0x00000A56,	0x00000019,	0x00000009,	0x00020001,	0x000001D0,	0x00000A70,	0x0000001C,
	0x00000006,	0x00020001,	0x000001D4,	0x00000A8D,	0x0000001B,	0x00000000,	0x00020001,	0x000001D8,	0x00000AA9,	0x00000019,
	0x00000000,	0x00020001,	0x000001DC,	0x00000AC3,	0x0000001C,	0x00000000,	0x00020001,	0x000001E0,	0x00000AE0,	0x00000022,
	0x00000000,	0x00020001,	0x000001E4,	0x00000B03,	0x00000020,	0x00000000,	0x00020001,	0x000001E8,	0x00000B24,	0x00000023,
	0x00000000,	0x00020001,	0x000001EC,	0x00000B48,	0x0000001C,	0x00000002,	0x00020001,	0x000001F0,	0x00000B65,	0x00000016,
	0x00000009,	0x00020001,	0x000001F4,	0x00000B7C,	0x00000016,	0x00000009,	0x00020001,	0x000001F8,	0x00000B93,	0x00000017,
	0x00000009,	0x00020001,	0x000001FC,	0x00000BAB,	0x00000017,	0x00000009,	0x00020001,	0x00000200,	0x00000BC3,	0x00000019,
	0x00000009,	0x00020001,	0x00000204,	0x00000BDD,	0x0000001C,	0x00000006,	0x00020001,	0x00000208,	0x00000BFA,	0x0000001B,
	0x00000000,	0x00020001,	0x0000020C,	0x00000C16,	0x00000019,	0x00000000,	0x00020001,	0x00000210,	0x00000C30,	0x0000001C,
	0x00000000,	0x00020001,	0x00000214,	0x00000C4D,	0x00000022,	0x00000000,	0x00020001,	0x00000218,	0x00000C70,	0x00000020,
	0x00000000,	0x00020001,	0x0000021C,	0x00000C91,	0x00000023,	0x00000000,	0x00020001,	0x00000220,	0x00000CB5,	0x0000001C,
	0x00000002,	0x00020001,	0x00000224,	0x00000CD2,	0x0000000F,	0x00000002,	0x00020001,	0x00000078,	0x00000CE2,	0x00000026,
	0x00000009,	0x00020001,	0x0000007C,	0x00000D09,	0x0000000C,	0x00000001,	0x00020001,	0x00000084,	0x00000050,	0x0000000D,
	0x0000000E,	0x00020001,	0x00000040,	0x00000002,	0x00000010,	0x00000D16,	0x00000010,	0x00000002,	0x00020001,	0x00000034,
	0x00000002,	0x00000004,	0x505F6C67,	0x7469736F,	0x006E6F69,	0x505F6C67,	0x746E696F,	0x657A6953,	0x646F4D00,	0x69566C65,
	0x72507765,	0x63656A6F,	0x6E6F6974,	0x7274614D,	0x4D007869,	0x6C65646F,	0x77656956,	0x7274614D,	0x4E007869,	0x616D726F,
	0x74614D6C,	0x00786972,	0x74786554,	0x4D657275,	0x69727461,	0x65560078,	0x78657472,	0x6C6F4300,	0x4E00726F,	0x616D726F,
	0x754D006C,	0x5469746C,	0x6F437865,	0x3064726F,	0x6C754D00,	0x65546974,	0x6F6F4378,	0x00316472,	0x6E696F50,	0x7A695374,
	0x72460065,	0x43746E6F,	0x726F6C6F,	0x676F4600,	0x67617246,	0x726F6F43,	0x6F500064,	0x45746E69,	0x6C62616E,	0x46006465,
	0x6E45676F,	0x656C6261,	0x72460064,	0x4E746E6F,	0x6B636142,	0x6574614D,	0x6C616972,	0x696D652E,	0x6F697373,	0x7246006E,
	0x4E746E6F,	0x6B636142,	0x6574614D,	0x6C616972,	0x626D612E,	0x746E6569,	0x6F724600,	0x424E746E,	0x4D6B6361,	0x72657461,
	0x2E6C6169,	0x66666964,	0x00657375,	0x6E6F7246,	0x61424E74,	0x614D6B63,	0x69726574,	0x732E6C61,	0x75636570,	0x0072616C,
	0x6E6F7246,	0x61424E74,	0x614D6B63,	0x69726574,	0x732E6C61,	0x696E6968,	0x7373656E,	0x6C6F6300,	0x614D726F,	0x69726574,
	0x6E456C61,	0x656C6261,	0x694C0064,	0x53746867,	0x6372756F,	0x5D305B65,	0x626D612E,	0x746E6569,	0x67694C00,	0x6F537468,
	0x65637275,	0x2E5D305B,	0x66666964,	0x00657375,	0x6867694C,	0x756F5374,	0x5B656372,	0x732E5D30,	0x75636570,	0x0072616C,
	0x6867694C,	0x756F5374,	0x5B656372,	0x702E5D30,	0x7469736F,	0x006E6F69,	0x6867694C,	0x756F5374,	0x5B656372,	0x682E5D30,
	0x56666C61,	0x6F746365,	0x694C0072,	0x53746867,	0x6372756F,	0x5D305B65,	0x6F70732E,	0x72694474,	0x69746365,	0x4C006E6F,
	0x74686769,	0x72756F53,	0x305B6563,	0x70732E5D,	0x7845746F,	0x656E6F70,	0x4C00746E,	0x74686769,	0x72756F53,	0x305B6563,
	0x70732E5D,	0x7543746F,	0x66666F74,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D305B,	0x746F7073,	0x43736F43,	0x666F7475,
	0x694C0066,	0x53746867,	0x6372756F,	0x5D305B65,	0x6E6F632E,	0x6E617473,	0x74744174,	0x61756E65,	0x6E6F6974,	0x67694C00,
	0x6F537468,	0x65637275,	0x2E5D305B,	0x656E696C,	0x74417261,	0x756E6574,	0x6F697461,	0x694C006E,	0x53746867,	0x6372756F,
	0x5D305B65,	0x6175712E,	0x74617264,	0x74416369,	0x756E6574,	0x6F697461,	0x694C006E,	0x53746867,	0x6372756F,	0x5D305B65,
	0x4473692E,	0x63657269,	0x6E6F6974,	0x4C006C61,	0x74686769,	0x72756F53,	0x315B6563,	0x6D612E5D,	0x6E656962,	0x694C0074,
	0x53746867,	0x6372756F,	0x5D315B65,	0x6669642E,	0x65737566,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D315B,	0x63657073,
	0x72616C75,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D315B,	0x69736F70,	0x6E6F6974,	0x67694C00,	0x6F537468,	0x65637275,
	0x2E5D315B,	0x666C6168,	0x74636556,	0x4C00726F,	0x74686769,	0x72756F53,	0x315B6563,	0x70732E5D,	0x6944746F,	0x74636572,
	0x006E6F69,	0x6867694C,	0x756F5374,	0x5B656372,	0x732E5D31,	0x45746F70,	0x6E6F7078,	0x00746E65,	0x6867694C,	0x756F5374,
	0x5B656372,	0x732E5D31,	0x43746F70,	0x666F7475,	0x694C0066,	0x53746867,	0x6372756F,	0x5D315B65,	0x6F70732E,	0x736F4374,
	0x6F747543,	0x4C006666,	0x74686769,	0x72756F53,	0x315B6563,	0x6F632E5D,	0x6174736E,	0x7441746E,	0x756E6574,	0x6F697461,
	0x694C006E,	0x53746867,	0x6372756F,	0x5D315B65,	0x6E696C2E,	0x41726165,	0x6E657474,	0x69746175,	0x4C006E6F,	0x74686769,
	0x72756F53,	0x315B6563,	0x75712E5D,	0x61726461,	0x41636974,	0x6E657474,	0x69746175,	0x4C006E6F,	0x74686769,	0x72756F53,
	0x315B6563,	0x73692E5D,	0x65726944,	0x6F697463,	0x006C616E,	0x6867694C,	0x756F5374,	0x5B656372,	0x612E5D32,	0x6569626D,
	0x4C00746E,	0x74686769,	0x72756F53,	0x325B6563,	0x69642E5D,	0x73756666,	0x694C0065,	0x53746867,	0x6372756F,	0x5D325B65,
	0x6570732E,	0x616C7563,	0x694C0072,	0x53746867,	0x6372756F,	0x5D325B65,	0x736F702E,	0x6F697469,	0x694C006E,	0x53746867,
	0x6372756F,	0x5D325B65,	0x6C61682E,	0x63655666,	0x00726F74,	0x6867694C,	0x756F5374,	0x5B656372,	0x732E5D32,	0x44746F70,
	0x63657269,	0x6E6F6974,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D325B,	0x746F7073,	0x6F707845,	0x746E656E,	0x67694C00,
	0x6F537468,	0x65637275,	0x2E5D325B,	0x746F7073,	0x6F747543,	0x4C006666,	0x74686769,	0x72756F53,	0x325B6563,	0x70732E5D,
	0x6F43746F,	0x74754373,	0x0066666F,	0x6867694C,	0x756F5374,	0x5B656372,	0x632E5D32,	0x74736E6F,	0x41746E61,	0x6E657474,
	0x69746175,	0x4C006E6F,	0x74686769,	0x72756F53,	0x325B6563,	0x696C2E5D,	0x7261656E,	0x65747441,	0x7461756E,	0x006E6F69,
	0x6867694C,	0x756F5374,	0x5B656372,	0x712E5D32,	0x72646175,	0x63697461,	0x65747441,	0x7461756E,	0x006E6F69,	0x6867694C,
	0x756F5374,	0x5B656372,	0x692E5D32,	0x72694473,	0x69746365,	0x6C616E6F,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D335B,
	0x69626D61,	0x00746E65,	0x6867694C,	0x756F5374,	0x5B656372,	0x642E5D33,	0x75666669,	0x4C006573,	0x74686769,	0x72756F53,
	0x335B6563,	0x70732E5D,	0x6C756365,	0x4C007261,	0x74686769,	0x72756F53,	0x335B6563,	0x6F702E5D,	0x69746973,	0x4C006E6F,
	0x74686769,	0x72756F53,	0x335B6563,	0x61682E5D,	0x6556666C,	0x726F7463,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D335B,
	0x746F7073,	0x65726944,	0x6F697463,	0x694C006E,	0x53746867,	0x6372756F,	0x5D335B65,	0x6F70732E,	0x70784574,	0x6E656E6F,
	0x694C0074,	0x53746867,	0x6372756F,	0x5D335B65,	0x6F70732E,	0x74754374,	0x0066666F,	0x6867694C,	0x756F5374,	0x5B656372,
	0x732E5D33,	0x43746F70,	0x7543736F,	0x66666F74,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D335B,	0x736E6F63,	0x746E6174,
	0x65747441,	0x7461756E,	0x006E6F69,	0x6867694C,	0x756F5374,	0x5B656372,	0x6C2E5D33,	0x61656E69,	0x74744172,	0x61756E65,
	0x6E6F6974,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D335B,	0x64617571,	0x69746172,	0x74744163,	0x61756E65,	0x6E6F6974,
	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D335B,	0x69447369,	0x74636572,	0x616E6F69,	0x694C006C,	0x53746867,	0x6372756F,
	0x5D345B65,	0x626D612E,	0x746E6569,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D345B,	0x66666964,	0x00657375,	0x6867694C,
	0x756F5374,	0x5B656372,	0x732E5D34,	0x75636570,	0x0072616C,	0x6867694C,	0x756F5374,	0x5B656372,	0x702E5D34,	0x7469736F,
	0x006E6F69,	0x6867694C,	0x756F5374,	0x5B656372,	0x682E5D34,	0x56666C61,	0x6F746365,	0x694C0072,	0x53746867,	0x6372756F,
	0x5D345B65,	0x6F70732E,	0x72694474,	0x69746365,	0x4C006E6F,	0x74686769,	0x72756F53,	0x345B6563,	0x70732E5D,	0x7845746F,
	0x656E6F70,	0x4C00746E,	0x74686769,	0x72756F53,	0x345B6563,	0x70732E5D,	0x7543746F,	0x66666F74,	0x67694C00,	0x6F537468,
	0x65637275,	0x2E5D345B,	0x746F7073,	0x43736F43,	0x666F7475,	0x694C0066,	0x53746867,	0x6372756F,	0x5D345B65,	0x6E6F632E,
	0x6E617473,	0x74744174,	0x61756E65,	0x6E6F6974,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D345B,	0x656E696C,	0x74417261,
	0x756E6574,	0x6F697461,	0x694C006E,	0x53746867,	0x6372756F,	0x5D345B65,	0x6175712E,	0x74617264,	0x74416369,	0x756E6574,
	0x6F697461,	0x694C006E,	0x53746867,	0x6372756F,	0x5D345B65,	0x4473692E,	0x63657269,	0x6E6F6974,	0x4C006C61,	0x74686769,
	0x72756F53,	0x355B6563,	0x6D612E5D,	0x6E656962,	0x694C0074,	0x53746867,	0x6372756F,	0x5D355B65,	0x6669642E,	0x65737566,
	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D355B,	0x63657073,	0x72616C75,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D355B,
	0x69736F70,	0x6E6F6974,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D355B,	0x666C6168,	0x74636556,	0x4C00726F,	0x74686769,
	0x72756F53,	0x355B6563,	0x70732E5D,	0x6944746F,	0x74636572,	0x006E6F69,	0x6867694C,	0x756F5374,	0x5B656372,	0x732E5D35,
	0x45746F70,	0x6E6F7078,	0x00746E65,	0x6867694C,	0x756F5374,	0x5B656372,	0x732E5D35,	0x43746F70,	0x666F7475,	0x694C0066,
	0x53746867,	0x6372756F,	0x5D355B65,	0x6F70732E,	0x736F4374,	0x6F747543,	0x4C006666,	0x74686769,	0x72756F53,	0x355B6563,
	0x6F632E5D,	0x6174736E,	0x7441746E,	0x756E6574,	0x6F697461,	0x694C006E,	0x53746867,	0x6372756F,	0x5D355B65,	0x6E696C2E,
	0x41726165,	0x6E657474,	0x69746175,	0x4C006E6F,	0x74686769,	0x72756F53,	0x355B6563,	0x75712E5D,	0x61726461,	0x41636974,
	0x6E657474,	0x69746175,	0x4C006E6F,	0x74686769,	0x72756F53,	0x355B6563,	0x73692E5D,	0x65726944,	0x6F697463,	0x006C616E,
	0x6867694C,	0x756F5374,	0x5B656372,	0x612E5D36,	0x6569626D,	0x4C00746E,	0x74686769,	0x72756F53,	0x365B6563,	0x69642E5D,
	0x73756666,	0x694C0065,	0x53746867,	0x6372756F,	0x5D365B65,	0x6570732E,	0x616C7563,	0x694C0072,	0x53746867,	0x6372756F,
	0x5D365B65,	0x736F702E,	0x6F697469,	0x694C006E,	0x53746867,	0x6372756F,	0x5D365B65,	0x6C61682E,	0x63655666,	0x00726F74,
	0x6867694C,	0x756F5374,	0x5B656372,	0x732E5D36,	0x44746F70,	0x63657269,	0x6E6F6974,	0x67694C00,	0x6F537468,	0x65637275,
	0x2E5D365B,	0x746F7073,	0x6F707845,	0x746E656E,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D365B,	0x746F7073,	0x6F747543,
	0x4C006666,	0x74686769,	0x72756F53,	0x365B6563,	0x70732E5D,	0x6F43746F,	0x74754373,	0x0066666F,	0x6867694C,	0x756F5374,
	0x5B656372,	0x632E5D36,	0x74736E6F,	0x41746E61,	0x6E657474,	0x69746175,	0x4C006E6F,	0x74686769,	0x72756F53,	0x365B6563,
	0x696C2E5D,	0x7261656E,	0x65747441,	0x7461756E,	0x006E6F69,	0x6867694C,	0x756F5374,	0x5B656372,	0x712E5D36,	0x72646175,
	0x63697461,	0x65747441,	0x7461756E,	0x006E6F69,	0x6867694C,	0x756F5374,	0x5B656372,	0x692E5D36,	0x72694473,	0x69746365,
	0x6C616E6F,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D375B,	0x69626D61,	0x00746E65,	0x6867694C,	0x756F5374,	0x5B656372,
	0x642E5D37,	0x75666669,	0x4C006573,	0x74686769,	0x72756F53,	0x375B6563,	0x70732E5D,	0x6C756365,	0x4C007261,	0x74686769,
	0x72756F53,	0x375B6563,	0x6F702E5D,	0x69746973,	0x4C006E6F,	0x74686769,	0x72756F53,	0x375B6563,	0x61682E5D,	0x6556666C,
	0x726F7463,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D375B,	0x746F7073,	0x65726944,	0x6F697463,	0x694C006E,	0x53746867,
	0x6372756F,	0x5D375B65,	0x6F70732E,	0x70784574,	0x6E656E6F,	0x694C0074,	0x53746867,	0x6372756F,	0x5D375B65,	0x6F70732E,
	0x74754374,	0x0066666F,	0x6867694C,	0x756F5374,	0x5B656372,	0x732E5D37,	0x43746F70,	0x7543736F,	0x66666F74,	0x67694C00,
	0x6F537468,	0x65637275,	0x2E5D375B,	0x736E6F63,	0x746E6174,	0x65747441,	0x7461756E,	0x006E6F69,	0x6867694C,	0x756F5374,
	0x5B656372,	0x6C2E5D37,	0x61656E69,	0x74744172,	0x61756E65,	0x6E6F6974,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D375B,
	0x64617571,	0x69746172,	0x74744163,	0x61756E65,	0x6E6F6974,	0x67694C00,	0x6F537468,	0x65637275,	0x2E5D375B,	0x69447369,
	0x74636572,	0x616E6F69,	0x694C006C,	0x69746867,	0x6E45676E,	0x656C6261,	0x72460064,	0x4E746E6F,	0x6B636142,	0x6867694C,
	0x646F4D74,	0x72506C65,	0x6375646F,	0x63732E74,	0x43656E65,	0x726F6C6F,	0x6D756E00,	0x6867694C,	0x65735574,	0x65540064,
	0x72757478,	0x45443265,	0x6C62616E,	0x54006465,	0x6F437865,	0x3064726F,	0x78655400,	0x726F6F43,	0x00003164,};

//checksum generated by simpleCheckSum()
static const unsigned int UniversalVertCheckSum = 48;

static const char* UniversalVertText = 
	"//Joydeep\n"
	"uniform mat4 ModelViewProjectionMatrix ;\n"
	"uniform mat4 ModelViewMatrix;\n"
	"uniform mat3 NormalMatrix;\n"
	"uniform mat4 TextureMatrix[2];\n"
	"\n"
	"attribute vec4 Vertex;\n"
	"attribute vec4 Color;\n"
	"attribute vec3    Normal;\n"
	"attribute vec4 MultiTexCoord0;\n"
	"attribute vec4 MultiTexCoord1;\n"
	"attribute float PointSize;\n"
	"vec4 Position;\n"
	"\n"
	"\n"
	"varying vec4 FrontColor;\n"
	"varying float FogFragCoord;\n"
	"\n"
	"//=============================\n"
	"// point\n"
	"\n"
	"struct PointParameters\n"
	"{\n"
	"    float size;\n"
	"    float sizeMin;\n"
	"    float sizeMax;\n"
	"    float fadeThresholdSize;\n"
	"    float distanceConstantAttenuation;\n"
	"    float distanceLinearAttenuation;\n"
	"    float distanceQuadraticAttenuation;\n"
	"};\n"
	"\n"
	"uniform PointParameters Point;\n"
	"uniform bool PointEnabled;\n"
	"\n"
	"//varying float DerivedPointSize; \n"
	"float DerivedPointSize;              //  not used in fragment shader varying originally\n"
	"\n"
	"//=============================\n"
	"// fog\n"
	"\n"
	"uniform bool FogEnabled;\n"
	"\n"
	"//\n"
	"//=============================\n"
	"// lighting\n"
	"\n"
	"const int MaxLights = 8;\n"
	"\n"
	"struct MaterialParameters\n"
	"{\n"
	"    vec4 emission;\n"
	"    vec4 ambient;\n"
	"    vec4 diffuse;\n"
	"    vec4 specular;\n"
	"    float shininess;\n"
	"};\n"
	"\n"
	"uniform MaterialParameters FrontNBackMaterial;\n"
	"uniform bool colorMaterialEnabled;\n"
	"// currentMaterial global variable is used for copying FrontNBackMaterial because incase color material is enabled then \n"
	"// we have to modify the material ambient and diffuse properties with current color which is not possible for uniforms\n"
	"MaterialParameters currentMaterial; \n"
	"\n"
	"struct LightSourceParameters\n"
	"{\n"
	"    vec4 ambient;\n"
	"    vec4 diffuse;\n"
	"    vec4 specular;\n"
	"    vec4 position;\n"
	"    vec4 halfVector;\n"
	"    vec3 spotDirection;\n"
	"    float spotExponent;\n"
	"    float spotCutoff; // (range: [0.0, 90.0], 180.0)\n"
	"    float spotCosCutoff; // cos(spotCutoff) (range: [1.0, 0.0], -1.0)\n"
	"    float constantAttenuation;\n"
	"    float linearAttenuation;\n"
	"    float quadraticAttenuation;\n"
	"    bool isDirectional;\n"
	"};\n"
	"\n"
	"uniform LightSourceParameters LightSource[MaxLights];\n"
	"\n"
	"struct LightModelParameters\n"
	"{\n"
	"    vec4 ambient;\n"
	"    bool isTwoSided;\n"
	"};\n"
	"\n"
	"uniform LightModelParameters LightModel;\n"
	"\n"
	"uniform bool LightEnabled[MaxLights];\n"
	"uniform bool LightingEnabled;\n"
	"\n"
	"struct LightModelProducts\n"
	"{\n"
	"    vec4 sceneColor;\n"
	"};\n"
	"\n"
	"uniform LightModelProducts FrontNBackLightModelProduct;\n"
	"\n"
	"struct LightProducts\n"
	"{\n"
	"    vec4 ambient;\n"
	"    vec4 diffuse;\n"
	"    vec4 specular;\n"
	"};\n"
	"\n"
	"uniform LightProducts FrontNBackLightProduct[MaxLights];\n"
	"    uniform int numLightUsed;\n"
	"\n"
	"//\n"
	"//=============================\n"
	"// texturing\n"
	"\n"
	"const int MaxTextureCoords = 2;\n"
	"\n"
	"uniform bool Texture2DEnabled[MaxTextureCoords];\n"
	"\n"
	"// this is temorary fix for multi texture after compiler bug fix for array we can revert it back (Sandeep Nanda)\n"
	"//varying vec4 TexCoord[MaxTextureCoords];\n"
	"varying vec4 TexCoord0;\n"
	"varying vec4 TexCoord1;\n"
	"\n"
	"//=============================\n"
	"// miscellaneous\n"
	"\n"
	"uniform bool MultiSampleEnabled;\n"
	"\n"
	"//\n"
	"// functions\n"
	"//\n"
	"\n"
	"vec4 lit(float NdotL, float NdotH, float m);\n"
	"\n"
	"\n"
	"vec4 light_point_view_local(\n"
	"    vec3 epos, // the eye space vertex position\n"
	"    vec3 normal, // the vertex normal\n"
	"    int idx );\n"
	"\n"
	"vec4 light_directional_view_local(\n"
	"    vec3 epos,         //the eye space vertex position\n"
	"    vec3 normal,         //the vertex normal\n"
	"    int idx )  ;\n"
	"\n"
	"\n"
	"void main(void)\n"
	"{\n"
	"    // position\n"
	"    gl_Position = ModelViewProjectionMatrix * Vertex;   //Joydeep\n"
	"         \n"
	"    vec4 epos = ModelViewMatrix * Vertex; // The eye-space vertex position  \n"
	"    \n"
	"    vec3 normal = normalize(NormalMatrix * Normal);   \n"
	"    \n"
	"    FrontColor = Color ;  // Joydeep\n"
	"\n"
	"    if(Texture2DEnabled[0]) TexCoord0 = TextureMatrix[0]*MultiTexCoord0; // Temporary Fix for Multitexture (Sandeep Nanda)\n"
	"    if(Texture2DEnabled[1]) TexCoord1 = TextureMatrix[1]*MultiTexCoord1;// Temporary Fix for Multitexture (Sandeep Nanda)\n"
	"\n"
	"    //\n"
	"    //==================================\n"
	"    // lighting\n"
	"    currentMaterial.ambient = FrontNBackMaterial.ambient;\n"
	"    currentMaterial.diffuse = FrontNBackMaterial.diffuse;\n"
	"    currentMaterial.specular = FrontNBackMaterial.specular;\n"
	"    currentMaterial.shininess = FrontNBackMaterial.shininess;\n"
	"    \n"
	"    if (colorMaterialEnabled)\n"
	"    {\n"
	"        // If color material is enabled then update the material ambient and diffuse color to\n"
	"        // current color(generic vertex color or vertex color pointer)\n"
	"        currentMaterial.ambient = Color;\n"
	"        currentMaterial.diffuse = Color;\n"
	"    }\n"
	"    \n"
	"    if(LightingEnabled)\n"
	"    {\n"
	"        int i;\n"
	"        \n"
	"        vec4 vcolor =FrontNBackLightModelProduct.sceneColor; // emission_material + ambient_light * ambient_material             \n"
	"         \n"
	"        for(i=0; i <  numLightUsed ; i++)\n"
	"    {\n"
	"                 //directional light                          \n"
	"        if(LightSource[i].isDirectional)\n"
	"                       vcolor += light_directional_view_local(epos.xyz/epos.w, normal, i);                                \n"
	"        else // point light\n"
	"            vcolor += light_point_view_local(epos.xyz, normal, i);\n"
	"            \n"
	"    }\n"
	"        \n"
	"        vcolor =  clamp(vcolor, 0.0, 1.0);\n"
	"        FrontColor = vcolor ;\n"
	"    }\n"
	"\n"
	"    //\n"
	"    //==================================\n"
	"    // points\n"
	"    // If PointEnabled = 1 means point mode is enabled\n"
	"    if(PointEnabled)\n"
	"    {\n"
	"        gl_PointSize =  PointSize; \n"
	"    }\n"
	"   /* else\n"
	"    {\n"
	"        float d;\n"
	"    \n"
	"        d = length(epos);\n"
	"        \n"
	"        // derivedSize = clamp(size * sqrt(1/(a + b*d + c * d^2)))\n"
	"        DerivedPointSize = Point.distanceConstantAttenuation + Point.distanceLinearAttenuation * d + \n"
	"            Point.distanceQuadraticAttenuation * d * d;\n"
	"        DerivedPointSize = clamp(Point.size * sqrt(1.0 / DerivedPointSize), Point.sizeMin, Point.sizeMax);\n"
	"        \n"
	"        if(MultiSampleEnabled)\n"
	"        {\n"
	"            if(DerivedPointSize < Point.fadeThresholdSize)\n"
	"            {\n"
	"                // fade\n"
	"                //FrontColor.a *= (DerivedPointSize * DerivedPointSize / Point.fadeThresholdSize * Point.fadeThresholdSize);\n"
	"                FrontColor[3] *= (DerivedPointSize * DerivedPointSize / Point.fadeThresholdSize * Point.fadeThresholdSize);\n"
	"                DerivedPointSize = Point.fadeThresholdSize;\n"
	"            }\n"
	"        }\n"
	"    }*/\n"
	"\n"
	"    //gl_PointSize = PointSize;\n"
	"    \n"
	"    //==================================\n"
	"    // fog\n"
	"    \n"
	"    if(FogEnabled)\n"
	"    {\n"
	"        FogFragCoord = abs(epos.z);  \n"
	"    }\n"
	"}\n"
	"\n"
	"// point light and local viewer\n"
	"vec4 light_point_view_local(\n"
	"    vec3 epos, // the eye space vertex position\n"
	"    vec3 normal, // the vertex normal\n"
	"    int idx )\n"
	"{\n"
	"        //LightSourceParameters light = LightSource[idx];\n"
	"\n"
	"    // vector from vertex to the light\n"
	"    vec3 vert2light = LightSource[idx].position.xyz - epos; //changed\n"
	"    \n"
	"    // light direction\n"
	"    vec3 ldir = normalize(vert2light);           \n"
	"\n"
	"    // distance between the two, need this for attenuation\n"
	"    float d = length(vert2light);         \n"
	"\n"
	"    //view direction, redundent for multiple lights\n"
	"    //vec3 vdir = normalize(-epos);  //changed\n"
	"    vec3 vdir = vec3(0.0,0.0,1.0);\n"
	"    \n"
	"    //vec3 eye = vec3(0.0,0.0,0.0);     \n"
	"\n"
	"    //halfway vector\n"
	"    vec3 halfv =  normalize(ldir + vdir); \n"
	"\n"
	"    // Compute the diffuse and specular coefficients\n"
	"    //  the diffuse cosine is in coeffs.y, the specular is in coeffs.z\n"
	"            \n"
	"    vec4 coeffs = lit(dot(normal,ldir), dot(normal,halfv), FrontNBackMaterial.shininess);\n"
	"\n"
	"///////////////////////////////////////////////////////////////////////////////////\n"
	"    float spotEffect ;\n"
	"    float NdotL = max(dot(normal,ldir),0.0);\n"
	"    \n"
	"    float spotDot = dot(-ldir, LightSource[idx].spotDirection);\n"
	"\n"
	"    if(LightSource[idx].spotCutoff >= 180.00)\n"
	"        spotEffect = 1.0;\n"
	"    else if (spotDot < LightSource[idx].spotCosCutoff)\n"
	"        spotEffect = 0.0; // light adds no contribution\n"
	"    else\n"
	"        spotEffect = pow(2.0,log2(spotDot)*LightSource[idx].spotExponent);\n"
	"\n"
	"//////////////////////////////////////////////////////////////////////////////////\n"
	"\n"
	"    // Compute the standard shading model\n"
	"    float att = 1.0/(LightSource[idx].constantAttenuation \n"
	"    + d*LightSource[idx].linearAttenuation + d*d*LightSource[idx].quadraticAttenuation);\n"
	"    vec4 outCol = att* spotEffect *  //attenuation term\n"
	"        (LightSource[idx].ambient*FrontNBackMaterial.ambient +                       //ambient term\n"
	"        LightSource[idx].diffuse*FrontNBackMaterial.diffuse*coeffs.y +            //diffuse term\n"
	"        LightSource[idx].specular*FrontNBackMaterial.specular*coeffs.z);            //specular term\n"
	"\n"
	"//    vec4 outCol = vec4(0.0,pow(2.0,log2(spotDot)*LightSource[idx].spotExponent),0.0,0.0);\n"
	"//    vec4 outCol = vec4(0.0,pow(spotDot,LightSource[idx].spotExponent),0.0,0.0);\n"
	"//    vec4 outCol = vec4(0.0,spotEffect,0.0,0.0);\n"
	"\n"
	"    return outCol;\n"
	"}\n"
	"\n"
	"// directional light and local viewer\n"
	"vec4 light_directional_view_local(\n"
	"    vec3 epos,         //the eye space vertex position\n"
	"    vec3 normal,         //the vertex normal\n"
	"    int idx )    \n"
	"{\n"
	"    //LightSourceParameters light = LightSource[idx];\n"
	"        //vec3 vdir = normalize(-epos); //changed\n"
	"    \n"
	"        vec3 lightDir = normalize(LightSource[idx].position.xyz);\n"
	"        \n"
	"    vec3 halfv = normalize(lightDir);\n"
	"        \n"
	"    vec4 coeffs = lit(dot(normal, lightDir), dot(normal,halfv),FrontNBackMaterial.shininess);\n"
	"      \n"
	"    // Compute the standard shading model\n"
	"    vec4 outCol = LightSource[idx].ambient*FrontNBackMaterial.ambient +               //ambient term\n"
	"        LightSource[idx].diffuse* FrontNBackMaterial.diffuse*coeffs.y  +      //diffuse term\n"
	"        LightSource[idx].specular*FrontNBackMaterial.specular*coeffs.z ;            //specular term\n"
	"\n"
	"    return outCol;\n"
	"}\n"
	"\n"
	"vec4 lit(float NdotL, float NdotH, float m)\n"
	"{\n"
	"    vec4 coeff;\n"
	"    // ambient coefficient, which is always 1.0\n"
	"    coeff.x = 1.0;\n"
	"    \n"
	"    // diffuse coefficient\n"
	"    if(NdotL < 0.0) coeff.y = 0.0;\n"
	"    else coeff.y = NdotL;\n"
	"    \n"
	"    //specular coefficient\n"
	"    if(NdotL <= 0.0 || NdotH < 0.0) \n"
	"        coeff.z = 0.0;\n"
	"    else \n"
	"        coeff.z = pow(NdotH, m);\n"
	"    \n"
	"    coeff.w = 1.0;\n"
	"        \n"
	"    return coeff;\n"
	"}\n"
	"";

#ifdef GL_HELPERS_INCLUDED
//glHelpers.h must be included BEFORE any of the shader header files. Also make sure you have the latest version of glHelpers.h
static ghShader UniversalVertShader(UniversalVertText, UniversalVert, UniversalVertLength, UniversalVertCheckSum);


#endif


#endif //_UniversalVert_h_
